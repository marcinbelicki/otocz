[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\CoolerMaster\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\CoolerMaster\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 15.0.1)
[debug]                   Load.loadUnit: plugins took 56.6666ms
[debug]                   Load.loadUnit: defsScala took 0.2116ms
[debug] [Loading] Scanning directory C:\Users\CoolerMaster\.sbt\1.0\plugins\project\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CoolerMaster\.sbt\1.0\plugins\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.2874 ms
[debug]                       Load.resolveProject(global-plugins-build-build) took 39.3886ms
[debug]                     Load.loadTransitive: finalizeProject(Project(id global-plugins-build-build, base: C:\Users\CoolerMaster\.sbt\1.0\plugins\project\project, plugins: List(<none>))) took 71.7332ms
[debug] [Loading] Done in C:\Users\CoolerMaster\.sbt\1.0\plugins\project\project, returning: (global-plugins-build-build)
[debug]                   Load.loadUnit: loadedProjectsRaw took 88.8991ms
[debug]                   Load.loadUnit: cleanEvalClasses took 0.2006ms
[debug]                 Load.loadUnit(file:/C:/Users/CoolerMaster/.sbt/1.0/plugins/project/project/, ...) took 152.2813ms
[debug]               Load.apply: load took 253.9935ms
[debug]               Load.apply: resolveProjects took 4.1066ms
[debug]               Load.apply: finalTransforms took 39.6323ms
[debug]               Load.apply: config.delegates took 5.158ms
[debug]               Load.apply: Def.make(settings)... took 544.8308ms
[debug]               Load.apply: structureIndex took 62.5245ms
[debug]               Load.apply: mkStreams took 1.0139ms
[info] loading global plugins from C:\Users\CoolerMaster\.sbt\1.0\plugins\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]             Load.loadUnit: plugins took 1474.6667ms
[debug]             Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\CoolerMaster\.sbt\1.0\plugins\project
[debug]               Load.loadUnit: mkEval took 3.5827ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CoolerMaster\.sbt\1.0\plugins\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3198 ms
[info] loading settings for project global-plugins-build from plugins.sbt ...
[debug]                 Load.resolveProject(global-plugins-build) took 1.96ms
[debug]               Load.loadTransitive: finalizeProject(Project(id global-plugins-build, base: C:\Users\CoolerMaster\.sbt\1.0\plugins\project, plugins: List(<none>))) took 3.7158ms
[debug] [Loading] Done in C:\Users\CoolerMaster\.sbt\1.0\plugins\project, returning: (global-plugins-build)
[debug]             Load.loadUnit: loadedProjectsRaw took 52.2924ms
[debug]             Load.loadUnit: cleanEvalClasses took 3.9719ms
[debug]           Load.loadUnit(file:/C:/Users/CoolerMaster/.sbt/1.0/plugins/project/, ...) took 1531.6754ms
[debug]         Load.apply: load took 1532.9763ms
[debug]         Load.apply: resolveProjects took 0.0787ms
[debug]         Load.apply: finalTransforms took 7.3788ms
[debug]         Load.apply: config.delegates took 0.2706ms
[debug]         Load.apply: Def.make(settings)... took 75.7222ms
[debug]         Load.apply: structureIndex took 19.0632ms
[debug]         Load.apply: mkStreams took 0.0014ms
[info] loading global plugins from C:\Users\CoolerMaster\.sbt\1.0\plugins\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]       Load.loadUnit: plugins took 1731.0554ms
[debug]       Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\CoolerMaster\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CoolerMaster\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1729 ms
[debug]           Load.resolveProject(global-plugins) took 0.7974ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\CoolerMaster\.sbt\1.0\plugins, plugins: List(<none>))) took 2.3219ms
[debug] [Loading] Done in C:\Users\CoolerMaster\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3.1541ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0158ms
[debug]     Load.loadUnit(file:/C:/Users/CoolerMaster/.sbt/1.0/plugins/, ...) took 1735.6324ms
[debug]   Load.apply: load took 1749.5281ms
[debug]   Load.apply: resolveProjects took 0.0715ms
[debug]   Load.apply: finalTransforms took 4.7515ms
[debug]   Load.apply: config.delegates took 0.2463ms
[debug]   Load.apply: Def.make(settings)... took 45.646ms
[debug]   Load.apply: structureIndex took 16.8671ms
[debug]   Load.apply: mkStreams took 0.0027ms
[info] loading global plugins from C:\Users\CoolerMaster\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2422.0938ms
[debug]           Load.loadUnit: plugins took 17.5717ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz\project
[debug]             Load.loadUnit: mkEval took 0.2148ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1293 ms
[info] loading settings for project otocz-build from idea.sbt ...
[debug]               Load.resolveProject(otocz-build) took 1.3465ms
[debug]             Load.loadTransitive: finalizeProject(Project(id otocz-build, base: C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz\project, plugins: List(<none>))) took 2.8565ms
[debug] [Loading] Done in C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz\project, returning: (otocz-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 21.2361ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.9913ms
[debug]         Load.loadUnit(file:/C:/Users/CoolerMaster/Documents/informatyka/2/seminarium_magisterskie/otocz/project/, ...) took 42.6282ms
[debug]       Load.apply: load took 43.8633ms
[debug]       Load.apply: resolveProjects took 0.1165ms
[debug]       Load.apply: finalTransforms took 4.7842ms
[debug]       Load.apply: config.delegates took 0.2865ms
[debug]       Load.apply: Def.make(settings)... took 44.2614ms
[debug]       Load.apply: structureIndex took 18.3723ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 865.7109ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz
[debug]       Load.loadUnit: mkEval took 0.221ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.3052 ms
[info] loading settings for project otocz from build.sbt ...
[debug]         Load.resolveProject(otocz) took 61.899ms
[debug]       Load.loadTransitive: finalizeProject(Project(id otocz, base: C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz, plugins: List(<none>))) took 68.8632ms
[debug] [Loading] Done in C:\Users\CoolerMaster\Documents\informatyka\2\seminarium_magisterskie\otocz, returning: (otocz)
[debug]     Load.loadUnit: loadedProjectsRaw took 1639.4715ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.6679ms
[debug]   Load.loadUnit(file:/C:/Users/CoolerMaster/Documents/informatyka/2/seminarium_magisterskie/otocz/, ...) took 2525.5568ms
[debug] Load.apply: load took 2526.7249ms
[debug] Load.apply: resolveProjects took 0.0753ms
[debug] Load.apply: finalTransforms took 18.5943ms
[debug] Load.apply: config.delegates took 0.3313ms
[debug] Load.apply: Def.make(settings)... took 71.0633ms
[debug] Load.apply: structureIndex took 18.5242ms
[debug] Load.apply: mkStreams took 0.0016ms
[info] set current project to otocz (in build file:/C:/Users/CoolerMaster/Documents/informatyka/2/seminarium_magisterskie/otocz/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57415 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57415, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to otocz (in build file:/C:/Users/CoolerMaster/Documents/informatyka/2/seminarium_magisterskie/otocz/)
[debug] > Exec(idea-shell, None, None)
